/**
 * PingOne Platform API - Management
 * A bare-bones collection for the PingOne API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Application } from './application';
import { ApplicationAccessControl } from './applicationAccessControl';
import { ApplicationIcon } from './applicationIcon';
import { ApplicationOIDCAllOf } from './applicationOIDCAllOf';
import { ApplicationOIDCAllOfMobile } from './applicationOIDCAllOfMobile';
import { ObjectEnvironment } from './objectEnvironment';

export class ApplicationOIDC {
    'accessControl'?: ApplicationAccessControl;
    /**
    * A boolean that specifies whether the permissions service should assign default roles to the application. This property is set only on the POST request. The property is ignored when included in a PUT request.
    */
    'assignActorRoles'?: boolean;
    /**
    * The time the resource was created.
    */
    'createdAt'?: string;
    /**
    * A string that specifies the description of the application.
    */
    'description'?: string;
    /**
    * A string that specifies the current enabled state of the application. Options are ENABLED or DISABLED.
    */
    'enabled': boolean;
    'environment'?: ObjectEnvironment;
    'icon'?: ApplicationIcon;
    /**
    * A string that specifies the application ID.
    */
    'id'?: string;
    /**
    * A string that specifies the custom login page URL for the application. If you set the loginPageUrl property for applications in an environment that sets a custom domain, the URL should include the top-level domain and at least one additional domain level. Warning To avoid issues with third-party cookies in some browsers, a custom domain must be used, giving your PingOne environment the same parent domain as your authentication application. For more information about custom domains, see Custom domains.
    */
    'loginPageUrl'?: string;
    /**
    * A string that specifies the name of the application. This is a required property.
    */
    'name': string;
    /**
    * A string that specifies the protocol for the Application. Options are OPENID_CONNECT and SAML.
    */
    'protocol': ApplicationOIDC.ProtocolEnum;
    /**
    * An array that specifies the list of labels associated with the application. Options are PING_FED_CONNECTION_INTEGRATION.
    */
    'tags'?: Array<ApplicationOIDC.TagsEnum>;
    /**
    * A string that specifies the type associated with the application. This is a required property. Options are WEB_APP, NATIVE_APP, SINGLE_PAGE_APP, and WORKER.
    */
    'type': ApplicationOIDC.TypeEnum;
    /**
    * The time the resource was last updated.
    */
    'updatedAt'?: string;
    /**
    * A boolean that specifies whether the request query parameter JWT is allowed to be unsigned. If false or null (default), an unsigned request object is not allowed.
    */
    'supportUnsignedRequestObject'?: boolean;
    'mobile'?: ApplicationOIDCAllOfMobile;
    /**
    * A string that specifies the bundle associated with the application, for push notifications in native apps. The value of the bundleId property is unique per environment, and once defined, is immutable.
    */
    'bundleId'?: string;
    /**
    * A string that specifies the package name associated with the application, for push notifications in native apps. The value of the mobile.packageName property is unique per environment, and once defined, is immutable.
    */
    'packageName'?: string;
    /**
    * A string that specifies the grant type for the authorization request. This is a required property. Options are AUTHORIZATION_CODE, IMPLICIT, REFRESH_TOKEN, CLIENT_CREDENTIALS.
    */
    'grantTypes': Array<ApplicationOIDC.GrantTypesEnum>;
    /**
    * A string that specifies the custom home page URL for the application.
    */
    'homePageUrl'?: string;
    /**
    * A string that specifies how PKCE request parameters are handled on the authorize request. Options are OPTIONAL PKCE code_challenge is optional and any code challenge method is acceptable. REQUIRED PKCE code_challenge is required and any code challenge method is acceptable. S256_REQUIRED PKCE code_challege is required and the code_challenge_method must be S256.
    */
    'pkceEnforcement'?: ApplicationOIDC.PkceEnforcementEnum;
    /**
    * A string that specifies the URLs that the browser can be redirected to after logout.
    */
    'postLogoutRedirectUris'?: Array<string>;
    /**
    * A string that specifies the callback URI for the authentication response.
    */
    'redirectUris'?: Array<string>;
    /**
    * An integer that specifies the lifetime in seconds of the refresh token. If a value is not provided, the default value is 2592000, or 30 days. Valid values are between 60 and 2147483647. If the refreshTokenRollingDuration property is specified for the application, then this property must be less than or equal to the value of refreshTokenRollingDuration. After this property is set, the value cannot be nullified. This value is used to generate the value for the exp claim when minting a new refresh token.
    */
    'refreshTokenDuration'?: number;
    /**
    * An integer that specifies the number of seconds a refresh token can be exchanged before re-authentication is required. If a value is not provided, the refresh token is valid forever. Valid values are between 60 and 2147483647. After this property is set, the value cannot be nullified. This value is used to generate the value for the exp claim when minting a new refresh token.
    */
    'refreshTokenRollingDuration'?: number;
    /**
    * A string that specifies the code or token type returned by an authorization request. Options are TOKEN, ID_TOKEN, and CODE. Note that CODE cannot be used in an authorization request with TOKEN or ID_TOKEN because PingOne does not currently support OIDC hybrid flows.
    */
    'responseTypes'?: Array<ApplicationOIDC.ResponseTypesEnum>;
    /**
    * A string that specifies the client authentication methods supported by the token endpoint. This is a required property. Options are NONE, CLIENT_SECRET_BASIC, and CLIENT_SECRET_POST.
    */
    'tokenEndpointAuthMethod': ApplicationOIDC.TokenEndpointAuthMethodEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "accessControl",
            "baseName": "accessControl",
            "type": "ApplicationAccessControl"
        },
        {
            "name": "assignActorRoles",
            "baseName": "assignActorRoles",
            "type": "boolean"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean"
        },
        {
            "name": "environment",
            "baseName": "environment",
            "type": "ObjectEnvironment"
        },
        {
            "name": "icon",
            "baseName": "icon",
            "type": "ApplicationIcon"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "loginPageUrl",
            "baseName": "loginPageUrl",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "protocol",
            "baseName": "protocol",
            "type": "ApplicationOIDC.ProtocolEnum"
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<ApplicationOIDC.TagsEnum>"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ApplicationOIDC.TypeEnum"
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "string"
        },
        {
            "name": "supportUnsignedRequestObject",
            "baseName": "supportUnsignedRequestObject",
            "type": "boolean"
        },
        {
            "name": "mobile",
            "baseName": "mobile",
            "type": "ApplicationOIDCAllOfMobile"
        },
        {
            "name": "bundleId",
            "baseName": "bundleId",
            "type": "string"
        },
        {
            "name": "packageName",
            "baseName": "packageName",
            "type": "string"
        },
        {
            "name": "grantTypes",
            "baseName": "grantTypes",
            "type": "Array<ApplicationOIDC.GrantTypesEnum>"
        },
        {
            "name": "homePageUrl",
            "baseName": "homePageUrl",
            "type": "string"
        },
        {
            "name": "pkceEnforcement",
            "baseName": "pkceEnforcement",
            "type": "ApplicationOIDC.PkceEnforcementEnum"
        },
        {
            "name": "postLogoutRedirectUris",
            "baseName": "postLogoutRedirectUris",
            "type": "Array<string>"
        },
        {
            "name": "redirectUris",
            "baseName": "redirectUris",
            "type": "Array<string>"
        },
        {
            "name": "refreshTokenDuration",
            "baseName": "refreshTokenDuration",
            "type": "number"
        },
        {
            "name": "refreshTokenRollingDuration",
            "baseName": "refreshTokenRollingDuration",
            "type": "number"
        },
        {
            "name": "responseTypes",
            "baseName": "responseTypes",
            "type": "Array<ApplicationOIDC.ResponseTypesEnum>"
        },
        {
            "name": "tokenEndpointAuthMethod",
            "baseName": "tokenEndpointAuthMethod",
            "type": "ApplicationOIDC.TokenEndpointAuthMethodEnum"
        }    ];

    static getAttributeTypeMap() {
        return ApplicationOIDC.attributeTypeMap;
    }
}

export namespace ApplicationOIDC {
    export enum ProtocolEnum {
        OpenidConnect = <any> 'OPENID_CONNECT',
        Saml = <any> 'SAML'
    }
    export enum TagsEnum {
        PingFedConnectionIntegration = <any> 'PING_FED_CONNECTION_INTEGRATION'
    }
    export enum TypeEnum {
        WebApp = <any> 'WEB_APP',
        NativeApp = <any> 'NATIVE_APP',
        SinglePageApp = <any> 'SINGLE_PAGE_APP',
        Worker = <any> 'WORKER',
        Service = <any> 'SERVICE',
        CustomApp = <any> 'CUSTOM_APP'
    }
    export enum GrantTypesEnum {
        AuthorizationCode = <any> 'AUTHORIZATION_CODE',
        Implicit = <any> 'IMPLICIT',
        RefreshToken = <any> 'REFRESH_TOKEN',
        ClientCredentials = <any> 'CLIENT_CREDENTIALS'
    }
    export enum PkceEnforcementEnum {
        Optional = <any> 'OPTIONAL',
        Required = <any> 'REQUIRED',
        S256Required = <any> 'S256_REQUIRED'
    }
    export enum ResponseTypesEnum {
        Token = <any> 'TOKEN',
        IdToken = <any> 'ID_TOKEN',
        Code = <any> 'CODE'
    }
    export enum TokenEndpointAuthMethodEnum {
        None = <any> 'NONE',
        ClientSecretBasic = <any> 'CLIENT_SECRET_BASIC',
        ClientSecretPost = <any> 'CLIENT_SECRET_POST'
    }
}
