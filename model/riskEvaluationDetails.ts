/**
 * PingOne Platform API - Management
 * A bare-bones collection for the PingOne API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { RiskEvaluationDetailsIpAddressReputation } from './riskEvaluationDetailsIpAddressReputation';
import { RiskEvaluationDetailsIpVelocityByUser } from './riskEvaluationDetailsIpVelocityByUser';
import { RiskEvaluationDetailsPreviousSuccessfulTransaction } from './riskEvaluationDetailsPreviousSuccessfulTransaction';
import { RiskEvaluationDetailsUserBasedRiskBehavior } from './riskEvaluationDetailsUserBasedRiskBehavior';
import { RiskEvaluationDetailsUserRiskBehavior } from './riskEvaluationDetailsUserRiskBehavior';
import { RiskEvaluationDetailsUserVelocityByIp } from './riskEvaluationDetailsUserVelocityByIp';

export class RiskEvaluationDetails {
    'ipAddressReputation'?: RiskEvaluationDetailsIpAddressReputation;
    'ipVelocityByUser'?: RiskEvaluationDetailsIpVelocityByUser;
    'userVelocityByIp'?: RiskEvaluationDetailsUserVelocityByIp;
    /**
    * A boolean that specifies whether the distance between the location of the user in their previous successful authentication and current authentication infers that the user had to travel at a speed greater than 1000 kilometers per hour. This condition is marked as fulfilled, only if: Location data is available for the current and previous IP address of the user. This is not the first transaction that the user has performed. The userâ€™s previous successful transaction was performed less than 24 hours ago. The user moved a distance of at least 100 kilometers. Thus, even if the user moved very fast, but moved only a distance of 90 kilometers, the condition is not fulfilled. The user moved at a speed greater than 1000 kilometers per hour.
    */
    'impossibleTravel'?: boolean;
    /**
    * The calculated travel speed in units of kilometers per hour.
    */
    'estimatedSpeed'?: number;
    /**
    * A boolean that specifies whether the current authentication originated from an anonymous network (for example, proxy or VPN).
    */
    'anonymousNetworkDetected'?: boolean;
    /**
    * A string that specifies the country related to current transaction from the IP address.
    */
    'country'?: string;
    /**
    * A string that specifies the state related to current transaction from the IP address.
    */
    'state'?: string;
    /**
    * A string that specifies the city related to current transaction from the IP address.
    */
    'city'?: string;
    /**
    * A double-precision floating point that specifies the longitude related to current transaction from the IP address. Values range from -90 to 90.
    */
    'longitude'?: number;
    /**
    * A double-precision floating point that specifies the latitude related to current transaction from the IP address. Values range from -180 to 180.
    */
    'latitude'?: number;
    'previousSuccessfulTransaction'?: RiskEvaluationDetailsPreviousSuccessfulTransaction;
    'userBasedRiskBehavior'?: RiskEvaluationDetailsUserBasedRiskBehavior;
    'userRiskBehavior'?: RiskEvaluationDetailsUserRiskBehavior;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "ipAddressReputation",
            "baseName": "ipAddressReputation",
            "type": "RiskEvaluationDetailsIpAddressReputation"
        },
        {
            "name": "ipVelocityByUser",
            "baseName": "ipVelocityByUser",
            "type": "RiskEvaluationDetailsIpVelocityByUser"
        },
        {
            "name": "userVelocityByIp",
            "baseName": "userVelocityByIp",
            "type": "RiskEvaluationDetailsUserVelocityByIp"
        },
        {
            "name": "impossibleTravel",
            "baseName": "impossibleTravel",
            "type": "boolean"
        },
        {
            "name": "estimatedSpeed",
            "baseName": "estimatedSpeed",
            "type": "number"
        },
        {
            "name": "anonymousNetworkDetected",
            "baseName": "anonymousNetworkDetected",
            "type": "boolean"
        },
        {
            "name": "country",
            "baseName": "country",
            "type": "string"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "string"
        },
        {
            "name": "city",
            "baseName": "city",
            "type": "string"
        },
        {
            "name": "longitude",
            "baseName": "longitude",
            "type": "number"
        },
        {
            "name": "latitude",
            "baseName": "latitude",
            "type": "number"
        },
        {
            "name": "previousSuccessfulTransaction",
            "baseName": "previousSuccessfulTransaction",
            "type": "RiskEvaluationDetailsPreviousSuccessfulTransaction"
        },
        {
            "name": "userBasedRiskBehavior",
            "baseName": "userBasedRiskBehavior",
            "type": "RiskEvaluationDetailsUserBasedRiskBehavior"
        },
        {
            "name": "userRiskBehavior",
            "baseName": "userRiskBehavior",
            "type": "RiskEvaluationDetailsUserRiskBehavior"
        }    ];

    static getAttributeTypeMap() {
        return RiskEvaluationDetails.attributeTypeMap;
    }
}

