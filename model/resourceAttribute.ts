/**
 * PingOne Platform API - Management
 * A bare-bones collection for the PingOne API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ObjectEnvironment } from './objectEnvironment';
import { ResourceResource } from './resourceResource';

export class ResourceAttribute {
    /**
    * A string that specifies the resource’s unique identifier.
    */
    'id'?: string;
    /**
    * A string that specifies the name of the custom resource attribute to be included in the access token
    */
    'name': string;
    /**
    * A string that specifies the type of resource attribute. Options are CORE - The claim is required and cannot not be removed., CUSTOM - The claim is not a CORE attribute. All created attributes are of this type.
    */
    'type'?: ResourceAttribute.TypeEnum;
    /**
    * A string that specifies the value of the custom resource attribute. This value can be a placeholder that references an attribute in the user schema, expressed as “${user.path.to.value}”, or it can be a static string. Placeholders must be valid, enabled attributes in the environment’s user schema. Examples fo valid values are “${user.email}”, “${user.name.family}”, and “myClaimValueString”
    */
    'value': string;
    'environment'?: ObjectEnvironment;
    'resource'?: ResourceResource;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ResourceAttribute.TypeEnum"
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "string"
        },
        {
            "name": "environment",
            "baseName": "environment",
            "type": "ObjectEnvironment"
        },
        {
            "name": "resource",
            "baseName": "resource",
            "type": "ResourceResource"
        }    ];

    static getAttributeTypeMap() {
        return ResourceAttribute.attributeTypeMap;
    }
}

export namespace ResourceAttribute {
    export enum TypeEnum {
        Core = <any> 'CORE',
        Custom = <any> 'CUSTOM'
    }
}
