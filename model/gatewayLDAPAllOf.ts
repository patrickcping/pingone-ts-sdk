/**
 * PingOne Platform API - Management
 * A bare-bones collection for the PingOne API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { GatewayLDAPAllOfUserTypes } from './gatewayLDAPAllOfUserTypes';

export class GatewayLDAPAllOf {
    /**
    * A string that specifies the distinguished name information to bind to the LDAP database (for example, uid=pingone,dc=example,dc=com).
    */
    'bindDN': string;
    /**
    * A string that specifies the bind password for the LDAP database. This is a required property.
    */
    'bindPassword': string;
    /**
    * (Optional) A string that specifies the connection security type. Options are None, TLS, and StartTLS. The default value is None.
    */
    'connectionSecurity'?: GatewayLDAPAllOf.ConnectionSecurityEnum;
    /**
    * An array of strings that specifies the LDAP server host name and port number (for example, [\"ds1.example.com:389\", \"ds2.example.com:389\"]).
    */
    'serversHostAndPort'?: Array<string>;
    /**
    * (Optional) An array of the userTypes properties for the users to be provisioned in PingOne. userTypes specifies which user properties in PingOne correspond to the user properties in an external LDAP directory. You can use an LDAP browser to view the user properties in the external LDAP directory.
    */
    'userTypes': Array<GatewayLDAPAllOfUserTypes>;
    /**
    * (Optional) A boolean that specifies whether or not to trust all SSL certificates (defaults to true). If this value is false, TLS certificates are not validated. When the value is set to true, only certificates that are signed by the default JVM CAs, or the CA certs that the customer has uploaded to the certificate service are trusted.
    */
    'validateTlsCertificates'?: boolean;
    /**
    * A string that specifies the LDAP vendor. Options are PingDirectory, Microsoft Active Directory, Oracle Directory Server Enterprise Edition, Oracle Unified Directory, CA Directory, OpenDJ Directory, IBM (Tivoli) Security Directory Server, and LDAP v3 compliant Directory Server.
    */
    'vendor': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "bindDN",
            "baseName": "bindDN",
            "type": "string"
        },
        {
            "name": "bindPassword",
            "baseName": "bindPassword",
            "type": "string"
        },
        {
            "name": "connectionSecurity",
            "baseName": "connectionSecurity",
            "type": "GatewayLDAPAllOf.ConnectionSecurityEnum"
        },
        {
            "name": "serversHostAndPort",
            "baseName": "serversHostAndPort",
            "type": "Array<string>"
        },
        {
            "name": "userTypes",
            "baseName": "userTypes",
            "type": "Array<GatewayLDAPAllOfUserTypes>"
        },
        {
            "name": "validateTlsCertificates",
            "baseName": "validateTlsCertificates",
            "type": "boolean"
        },
        {
            "name": "vendor",
            "baseName": "vendor",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return GatewayLDAPAllOf.attributeTypeMap;
    }
}

export namespace GatewayLDAPAllOf {
    export enum ConnectionSecurityEnum {
        None = <any> 'None',
        Tls = <any> 'TLS',
        StartTls = <any> 'StartTLS'
    }
}
