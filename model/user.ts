/**
 * PingOne Platform API - Management
 * A bare-bones collection for the PingOne API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { UserAccount } from './userAccount';
import { UserAddress } from './userAddress';
import { UserEnvironment } from './userEnvironment';
import { UserIdentityProvider } from './userIdentityProvider';
import { UserLastSignOn } from './userLastSignOn';
import { UserLifecycle } from './userLifecycle';
import { UserName } from './userName';
import { UserPassword } from './userPassword';
import { UserPhoto } from './userPhoto';
import { UserPopulation } from './userPopulation';

export class User {
    'account'?: UserAccount;
    'address'?: UserAddress;
    /**
    * The time the resource was created.
    */
    'createdAt'?: string;
    /**
    * A string that specifies the user’s email address, which must be provided and valid. For more information about email address formatting, see section 3.4 of RFC 2822, Internet Message Format.
    */
    'email': string;
    /**
    * A read-only boolean attribute that specifies whether the user is enabled. This attribute is set to ‘true’ by default when the user is created.
    */
    'enabled'?: boolean;
    'environment'?: UserEnvironment;
    /**
    * A string that specifies an identifier for the user resource as defined by the provisioning client. This is optional. This may be explicitly set to null when updating a user to unset it. The externalId attribute simplifies the correlation of the user in PingOne with the user’s account in another system of record. The platform does not use this attribute directly in any way, but it is used by Ping Identity’s Data Sync product. It can have a length of no more than 1024 characters (min/max=1/1024).
    */
    'externalId'?: string;
    /**
    * A string that specifies the user resource’s unique identifier.
    */
    'id'?: string;
    'identityProvider'?: UserIdentityProvider;
    'lastSignOn'?: UserLastSignOn;
    'lifecycle'?: UserLifecycle;
    /**
    * A string that specifies the user’s default location, which is optional. This may be explicitly set to null when updating a user to unset it. This is used for purposes of localizing such items as currency, date time format, or numerical representations. If provided, it must be a valid language tag as defined in RFC 5646. The following are example tags fr, en-US, es-419, az-Arab, man-Nkoo-GN. The string can contain any letters, numbers, combining characters, math and currency symbols, dingbats and drawing characters, and invisible whitespace (regex ^[\\p{L}\\p{M}\\p{Zs}\\p{S}\\p{N}\\p{P}]*$). It can have a length of no more than 256 characters (min/max=1/256).
    */
    'locale'?: string;
    /**
    * A read-only array of IDs for the groups the user is a member of. This property is returned for GET /environments/{envID}/users/{userID} when include=memberOfGroupIDs is appended to the request. This property is not returned with a list of users.
    */
    'memberOfGroupIDs'?: Array<string>;
    /**
    * A read-only array of names for the groups the user is a member of. This property is returned for GET /environments/{envID}/users/{userID} when include=memberOfGroupNames is appended to the request. This property is not returned with a list of users.
    */
    'memberOfGroupNames'?: Array<string>;
    /**
    * A boolean attribute that specifies whether multi-factor authentication is enabled. This attribute is set to false by default when the user is created. You can set mfaEnabled to true with POST CREATE User, POST CREATE User (Import), or PUT UPDATE User MFA Enabled. You cannot update mfaEnabled with PUT UPDATE User or PATCH UPDATE User.
    */
    'mfaEnabled'?: boolean;
    /**
    * A string that specifies the user’s native phone number, which is optional. This might also match the primaryPhone attribute. This may be explicitly set to null when updating a user to unset it. Valid phone numbers must have at least one number and a maximum character length of 32.
    */
    'mobilePhone'?: string;
    'name'?: UserName;
    /**
    * A string that specifies the user’s nickname, which is optional. This can be explicitly set to null when updating a user to unset it. The string can contain any letters, numbers, combining characters, math and currency symbols, dingbats and drawing characters, and invisible whitespace (regex ^[\\p{L}\\p{M}\\p{Zs}\\p{S}\\p{N}\\p{P}]*$). It can have a length of no more than 256 characters (min/max=1/256).
    */
    'nickname'?: string;
    'password'?: UserPassword;
    'photo'?: UserPhoto;
    'population': UserPopulation;
    /**
    * A string that specifies the user’s preferred written or spoken languages, which are optional. This may be explicitly set to null when updating a user to unset it. If provided, the format of the value must be a valid language range and the same as the HTTP Accept-Language header field (not including Accept-Language:) and is specified in Section 5.3.5 of RFC 7231. For example en-US, en-gb;q=0.8, en;q=0.7.
    */
    'preferredLanguage'?: string;
    /**
    * A string that specifies the user’s primary phone number, which is optional. This might also match the mobilePhone attribute. This may be explicitly set to null when updating a user to unset it. Valid phone numbers must have at least one number and a maximum character length of 32.
    */
    'primaryPhone'?: string;
    /**
    * A string that specifies the user’s time zone, which is optional. This can be explicitly set to null when updating a user to unset it. If provided, it must conform with the IANA Time Zone database format [RFC6557], also known as the “Olson” time zone database format [Olson-TZ] for example, “America/Los_Angeles” (regex ^\\w+/\\w+$).
    */
    'timezone'?: string;
    /**
    * A string that specifies the user’s title, which is optional, such as \"Vice President\". This can be explicitly set to null when updating a user to unset it. The string can contain any letters, numbers, combining characters, math and currency symbols, dingbats and drawing characters, and invisible whitespace (regex ^[\\p{L}\\p{M}\\p{Zs}\\p{S}\\p{N}\\p{P}]*$). It can have a length of no more than 256 characters (min/max=1/256).
    */
    'title'?: string;
    /**
    * A string that specifies the user’s type, which is optional. This can be explicitly set to null when updating a user to unset it. This attribute is organization-specific and has no special meaning within the PingOne platform. It could have values of \"Contractor\", \"Employee\", \"Intern\", \"Temp\", \"External\", and “Unknown”. The string can contain any letters, numbers, combining characters, math and currency symbols, dingbats and drawing characters, and invisible whitespace (regex ^[\\p{L}\\p{M}\\p{Zs}\\p{S}\\p{N}\\p{P}]*$). It can have a length of no more than 256 characters (min/max=1/256).
    */
    'type'?: string;
    /**
    * The time the resource was last updated.
    */
    'updatedAt'?: string;
    /**
    * A string that specifies the user name, which must be provided and must be unique within an environment. The username must either be a well-formed email address or a string. The string can contain any letters, numbers, combining characters, math and currency symbols, dingbats and drawing characters, and invisible whitespace (regex ^[\\p{L}\\p{M}\\p{Zs}\\p{S}\\p{N}\\p{P}]*$). It can have a length of no more than 128 characters (min/max=1/128).
    */
    'username': string;
    /**
    * Indicates whether ID verification can be done for the user. This value can be NOT_INITIATED (the initial value), ENABLED, or DISABLED. If the user verification status is DISABLED, a new verification status cannot be created for that user until the status is changed to ENABLED.
    */
    'verifyStatus'?: User.VerifyStatusEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "account",
            "baseName": "account",
            "type": "UserAccount"
        },
        {
            "name": "address",
            "baseName": "address",
            "type": "UserAddress"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "string"
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string"
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean"
        },
        {
            "name": "environment",
            "baseName": "environment",
            "type": "UserEnvironment"
        },
        {
            "name": "externalId",
            "baseName": "externalId",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "identityProvider",
            "baseName": "identityProvider",
            "type": "UserIdentityProvider"
        },
        {
            "name": "lastSignOn",
            "baseName": "lastSignOn",
            "type": "UserLastSignOn"
        },
        {
            "name": "lifecycle",
            "baseName": "lifecycle",
            "type": "UserLifecycle"
        },
        {
            "name": "locale",
            "baseName": "locale",
            "type": "string"
        },
        {
            "name": "memberOfGroupIDs",
            "baseName": "memberOfGroupIDs",
            "type": "Array<string>"
        },
        {
            "name": "memberOfGroupNames",
            "baseName": "memberOfGroupNames",
            "type": "Array<string>"
        },
        {
            "name": "mfaEnabled",
            "baseName": "mfaEnabled",
            "type": "boolean"
        },
        {
            "name": "mobilePhone",
            "baseName": "mobilePhone",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "UserName"
        },
        {
            "name": "nickname",
            "baseName": "nickname",
            "type": "string"
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "UserPassword"
        },
        {
            "name": "photo",
            "baseName": "photo",
            "type": "UserPhoto"
        },
        {
            "name": "population",
            "baseName": "population",
            "type": "UserPopulation"
        },
        {
            "name": "preferredLanguage",
            "baseName": "preferredLanguage",
            "type": "string"
        },
        {
            "name": "primaryPhone",
            "baseName": "primaryPhone",
            "type": "string"
        },
        {
            "name": "timezone",
            "baseName": "timezone",
            "type": "string"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "string"
        },
        {
            "name": "username",
            "baseName": "username",
            "type": "string"
        },
        {
            "name": "verifyStatus",
            "baseName": "verifyStatus",
            "type": "User.VerifyStatusEnum"
        }    ];

    static getAttributeTypeMap() {
        return User.attributeTypeMap;
    }
}

export namespace User {
    export enum VerifyStatusEnum {
        NotInitiated = <any> 'NOT_INITIATED',
        Enabled = <any> 'ENABLED',
        Disabled = <any> 'DISABLED'
    }
}
